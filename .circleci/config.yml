# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: gradle:jdk16-hotspot
      - image: postgres:13-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb

    steps:
      - checkout

      # Initialize the database
      - run: apt-get update && apt-get install postgresql-client -y
      - run: psql -h 127.0.0.1 -p 5432 -U postgres < .docker/initdb.sql

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

#      # run tests!
#      - run:
#          command: ./gradlew test jacocoMergedReport sonarqube -Dsonar.login=${SONAR_TOKEN} -Dsonar.organization=molgenis -Dsonar.host.url=https://sonarcloud.io -Dorg.ajoberstar.grgit.auth.username=${GITHUB_TOKEN} -Dorg.ajoberstar.grgit.auth.password
#          environment:
#            MOLGENIS_POSTGRES_USER: molgenis_admin
#            MOLGENIS_POSTGRES_PASS: molgenis_admin
#            MOLGENIS_POSTGRES_URI: jdbc:postgresql://localhost/molgenisdb

      - run:
          name: update packages
          command: apt-get update

      - run:
          name: add packages
          command: apt-get install ca-certificates curl gnupg lsb-release

      - run:
          name: update packages
          command: apt-get update

      # Install via apk on alpine based images
      - run:
          name: Install Docker client
          command: apt-get install docker-ce-cli

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      # push ssr-catalogue to repo
      - run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          ./gradlew dockerPush
